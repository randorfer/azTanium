{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "computerNamePrefix": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Name"
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Networking Resource Group"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet for VM"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "VM Administrator Name"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "VM Admin Password"
      }
    }
  },
  "variables": {
    "apiVersion": "2016-09-01",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "DSCSettings": {
      "modulesUrl": "https://github.com/randorfer/azTanium/blob/master/scenarios/tanium/configuration/taniumServer.ps1.zip?raw=true",
      "configurationFunction": "taniumServer.ps1\\taniumServer"
    },
    "VMSettings": {
      "Networking": {
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
        "publicIPAddressName": "[concat(parameters('computerNamePrefix'), '-pip')]",
        "nicName": "[concat(parameters('computerNamePrefix'), '-nic')]"
      },
      "serverName": "[concat(parameters('computerNamePrefix'), '-1')]",
      "availabilitySetName": "[concat(parameters('computerNamePrefix'), '-as')]",
      "size": "Standard_DS3_v2"
    }
  },
  "resources": [
    {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('vmSettings').Networking.publicIPAddressName]",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic"
        }
    },
    {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('vmSettings').Networking.nicName]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[variables('vmSettings').Networking.publicIPAddressName]"
        ],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmSettings').Networking.publicIPAddressName)]"
                        },
                        "subnet": {
                            "id": "[variables('vmSettings').Networking.subnetRef]"
                        }
                    }
                }
            ]
        }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('VMSettings').availabilitySetName]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 20
      }
    },
    {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('VMSettings').serverName]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[variables('vmSettings').Networking.nicName]",
            "[variables('vmSettings').availabilitySetName]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[variables('VMSettings').size]" 
            },
            "osProfile": {
                "computerName": "[variables('vmSettings').serverName]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2016-Datacenter",
                    "version": "latest"
                },
                "osDisk": {
                    "createOption": "FromImage"
                },
                "dataDisks": [
                  {
                    "diskSizeGB": 128,
                    "lun": 0,
                    "caching": "None",
                    "createOption": "Empty"
                  }
                ]
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vmSettings').Networking.nicName)]"
                    }
                ]
            },
            "availabilitySet": {
              "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('VMSettings').availabilitySetName)]"
            }
        },
        "resources": [
            {
                "type": "extensions",
                "name": "taniumServer-config-ext",
                "apiVersion": "[variables('apiVersion')]",
                "location": "[resourceGroup().location]",
                "dependsOn": [
                    "[variables('vmSettings').serverName]"
                ],
                "properties": {
                    "publisher": "Microsoft.PowerShell",
                    "type": "DSC",
                    "typeHandlerVersion": "2.20",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "modulesUrl": "[variables('DSCSettings').modulesUrl]",
                      "configurationFunction": "[variables('DSCSettings').configurationFunction]"
                    }
                }
            }
        ]
    }
  ],
  "outputs": {
  }
}
